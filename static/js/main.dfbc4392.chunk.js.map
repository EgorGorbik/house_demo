{"version":3,"sources":["redux/services/admin.service.js","redux/actionCreators/adress.action.js","redux/sagas/admin.saga.js","redux/actionCreators/admin.action.js","redux/actionCreators/loader.action.js","redux/sagas/index.js","redux/reducers/address.reducer.js","redux/store/configStore.js","redux/reducers/isAdmin.reducer.js","redux/reducers/loader.reducer.js","components/Header/index.jsx","components/Admin/HouseItem.jsx","components/Admin/index.jsx","components/Login/index.jsx","components/Router/PrivateRoute.jsx","components/Router/index.jsx","App.js","index.js"],"names":["getAddress","axios","request","method","url","headers","Authorization","localStorage","getItem","loginAdmin","data","password","usernameOrEmail","checkIsAdmin","watchAdmin","call","admin","console","log","put","type","address","setItem","accessToken","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","state","error","action","isAdmin","loader","store","createStore","applyMiddleware","run","Header","Navbar","bg","variant","Brand","href","Icon","className","Nav","Link","Component","HouseItem","props","this","house","houseAddress","street","houseNumber","commonInfo","Button","onClick","alert","connect","dispatch","Admin","React","createRef","houses","current","value","filter","e","toLowerCase","setState","Form","Control","ref","list","placeholder","id","map","el","searchHouse","Login","history","push","withRouter","PrivateRoute","component","rest","Route","render","Redirect","to","Router","path","exact","browserHistory","createBrowserHistory","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dfbc4392.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport function getAddress() {\n    return axios.request({\n        method: 'get',\n        url: `http://smarthouse-dev.us-east-2.elasticbeanstalk.com/api/dwelling-houses/`,\n        headers: {Authorization: 'Bearer ' + localStorage.getItem('accessToken')}\n    });\n}\n\nexport function loginAdmin() {\n    return axios.request({\n        method: 'post',\n        url: 'http://smarthouse-dev.us-east-2.elasticbeanstalk.com/api/auth/signin',\n        data: {\n            password: \"someone1999\",\n            usernameOrEmail: \"sone\"\n        }\n    });\n}\n\nexport function checkIsAdmin() {\n    return axios.request({\n        method: 'patch',\n        url: 'http://smarthouse-dev.us-east-2.elasticbeanstalk.com/api/auth/admin-mode',\n        headers: {Authorization: 'Bearer ' + localStorage.getItem('accessToken')}\n    });\n}","export const setAddressSuccess = (address) => ({type: 'SET_ADDRESS_SUCCESS', address});\nexport const setAddressFailed = (error) => ({type: 'SET_ADDRESS_FAILED', error});\n","import { takeEvery, put, delay, call, all } from \"redux-saga/effects\";\nimport * as admin from \"../services/admin.service\";\nimport {setAddressSuccess} from \"../actionCreators/adress.action\";\nimport {setAdminSuccess} from \"../actionCreators/admin.action\";\nimport {loaderToFalse, loaderToTrue} from \"../actionCreators/loader.action\";\n\nfunction* getAddress() {\n    try {\n        //yield put(loaderToTrue());\n        let { data } = yield call(admin.getAddress);\n        console.log(data)\n        yield put(setAddressSuccess(data));\n        //yield put(loaderToFalse());\n    } catch (e) {\n\n    }\n}\n\nfunction* loginAdmin() {\n    try {\n        //yield put(loaderToTrue());\n        let { data } = yield call(admin.loginAdmin);\n        console.log(data)\n        localStorage.setItem('accessToken', data.accessToken)\n        yield put(setAdminSuccess());\n        //yield put(loaderToFalse());\n    } catch (e) {\n\n    }\n}\n\nfunction* checkIsAdmin() {\n    try {\n        yield put(loaderToTrue());\n        let { data } = yield call(admin.checkIsAdmin);\n        yield put(setAdminSuccess());\n        yield put(loaderToFalse());\n    } catch (e) {\n        yield put(loaderToFalse());\n    }\n}\n\nexport default function* watchAdmin() {\n    yield takeEvery(\"GET_ADDRESS\", getAddress);\n    yield takeEvery(\"LOGIN_ADMIN\", loginAdmin);\n    yield takeEvery(\"CHECK_IS_ADMIN\", checkIsAdmin);\n}\n","export const setAdminSuccess = () => ({type: 'SET_ADMIN_SUCCESS'});\n","export const loaderToTrue = () => ({type: 'SET_LOADER_TRUE'});\nexport const loaderToFalse = () => ({type: 'SET_LOADER_FALSE'});\n","import { takeEvery, put, delay, call, all } from \"redux-saga/effects\";\nimport watchAdmin from \"./admin.saga\";\n\nexport default function* rootSaga() {\n    yield all([watchAdmin()]);\n}","export default (state = {data: null, error: null}, action) => {\n    switch (action.type) {\n        case 'SET_ADDRESS_SUCCESS':\n            return {data: action.address};\n        case 'SET_ADDRESS_FAILED':\n            return {error: action.error};\n        default:\n            return state;\n    }\n};","import {createStore, combineReducers, applyMiddleware, Reducer} from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"../sagas\";\nimport addressReducer from '../reducers/address.reducer';\nimport isAdminReducer from '../reducers/isAdmin.reducer';\nimport loaderReducer from '../reducers/loader.reducer';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const rootReducer = combineReducers({\n    address: addressReducer,\n    isAdmin: isAdminReducer,\n    loader: loaderReducer\n});\n\n\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);","export default (state = false, action) => {\n    switch (action.type) {\n        case 'SET_ADMIN_SUCCESS':\n            return true;\n        default:\n            return state;\n    }\n};","export default (state = false, action) => {\n    switch (action.type) {\n        case 'SET_LOADER_TRUE':\n            return true;\n        case 'SET_LOADER_FALSE':\n            return false;\n        default:\n            return state;\n    }\n};","import React, {Component} from 'react';\nimport {Form, Navbar, Nav, FormControl, Button} from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#\">\n                    <Icon className='home'/>\n                        Smart House\n                </Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#\">Temp</Nav.Link>\n                </Nav>\n            </Navbar>\n        )\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Button} from \"react-bootstrap\";\n\nclass HouseItem extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        console.log(this.props.house)\n        return(\n            <div className='house_item'>\n                <div className='house_item_header'>\n                    <span>{this.props.house.houseAddress.street}, </span>\n                    <span> {this.props.house.houseAddress.houseNumber}</span>\n                </div>\n                <div>{this.props.house.commonInfo}</div>\n                <Button className='choose_btn' variant=\"dark\" onClick={() => alert('и тут появляется вся инфа про дом')}>Выбрать</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    address: state.address\n});\n\nconst mapDispatchToProps = (dispatch) =>  ({\n    getAddress: () => {dispatch({type: \"GET_ADDRESS\"})}\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(HouseItem);\n","import React, {Component} from 'react';\nimport {Form, ListGroup} from 'react-bootstrap';\nimport {connect} from \"react-redux\";\nimport Header from \"../Header\";\nimport './index.css';\nimport Button from \"react-bootstrap/Button\";\nimport HouseItem from \"./HouseItem\";\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.address = React.createRef();\n        this.state = {\n            houses: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.getAddress();\n    }\n\n    searchHouse() {\n        console.log(this.address.current.value);\n        let houses = this.props.address.data.filter(e => e.houseAddress.street.toLowerCase() == this.address.current.value.toLowerCase())\n        this.setState({\n            houses: houses\n        })\n    }\n\n    render() {\n        console.log(this.props.address.data)\n        return (\n            <>\n                <Header/>\n                <div>\n                    <Form className=\"input_address\">\n                        <Form.Control ref={this.address} list=\"country\" placeholder=\"Address\" />\n                        <datalist id=\"country\">\n                            {this.props.address.data &&\n                            this.props.address.data.map(el => <option value={`${el.houseAddress.street}`}/>)}\n                        </datalist>\n                        <Button onClick={() => this.searchHouse()} variant=\"dark\">Найти</Button>\n                    </Form>\n                </div>\n                {\n                    this.state.houses.map(e => <HouseItem house={e}/> )\n                }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    address: state.address\n});\n\nconst mapDispatchToProps = (dispatch) =>  ({\n    getAddress: () => {dispatch({type: \"GET_ADDRESS\"})}\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Admin);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\n\nclass Login extends Component {\n    render() {\n        if(this.props.isAdmin) {\n            this.props.history.push('/admin')\n        }\n        return (\n            <button onClick={() => this.props.loginAdmin()}>Sign in</button>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    address: state.address,\n    isAdmin: state.isAdmin\n});\n\nconst mapDispatchToProps = (dispatch) =>  ({\n    loginAdmin: () => {dispatch({type: \"LOGIN_ADMIN\"})}\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login));\n","import React, {Component} from 'react';\nimport Route from \"react-router-dom/es/Route\";\nimport {connect} from \"react-redux\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\nclass PrivateRoute extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentWillMount() {\n        this.props.checkIsAdmin();\n    }\n\n    render() {\n        if(this.props.loader) {\n            return <div>loading...</div>\n        }\n\n        const {component: Component, ...rest} = this.props;\n        return (this.props.isAdmin ?\n            <Route {...rest} render={\n                (props) => <Component {...props}/>\n            }/> :\n                <Redirect to=\"/login\"/>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    address: state.address,\n    isAdmin: state.isAdmin,\n    loader: state.loader\n});\n\nconst mapDispatchToProps = (dispatch) =>  ({\n    getAddress: () => {dispatch({type: \"GET_ADDRESS\"})},\n    checkIsAdmin: () => {dispatch({type: \"CHECK_IS_ADMIN\"})},\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PrivateRoute);\n","import React, {Component} from 'react';\nimport {Redirect, Route, Switch, withRouter} from \"react-router\";\nimport Admin from \"../Admin\";\nimport Login from \"../Login\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nclass Router extends Component {\n    render() {\n        return(\n            <Switch>\n                <PrivateRoute path='/admin' component={Admin}/>\n                <Route exact path=\"/\">\n                    <Redirect to=\"/admin\"/>\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login/>\n                </Route>\n            </Switch>\n        )\n    }\n}\n\nexport default Router;","import React, {Component} from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/store/configStore\";\nimport {HashRouter} from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport Router from \"./components/Router\";\nconst browserHistory = createBrowserHistory();\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Provider store={store}>\n          <HashRouter history={browserHistory}>\n            <Router/>\n          </HashRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}